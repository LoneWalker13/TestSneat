@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer


@{
    ViewData["Title"] = "Members";
}
<div class="modal fade" id="membersModal" role="dialog" tabindex="-1" aria-hidden="true"></div>
<div class="row">
    <!-- Basic Layout -->
    <div class="col-xxl">
        <div class="card mb-2">
            <div class="card-header d-flex align-items-center justify-content-between">
                <h5 class="mb-0">@Localizer.GetString("Members")</h5> <small class="text-muted float-end"><button type="button" onclick="AddMember()" class="btn btn-primary"><i class="bx bx-plus"></i> &nbsp @Localizer.GetString("AddMembers")</button></small>
            </div>
            <div class="card-body">
                <div class="row mb-2">
                    <div class="col-md-6">
                        <div class="row">
                            <label class="col-md-4 col-form-label" for="basic-default-name">@Localizer.GetString("DateFrom") :</label>
                            <div class="col-md-8">
                                <input class="form-control" type="date" id="dateFrom" />
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="row">
                            <label class="col-md-4 col-form-label" for="basic-default-name">@Localizer.GetString("DateTo") :</label>
                            <div class="col-md-8">
                                <input class="form-control" type="date" id="dateTo" />
                            </div>
                        </div>
                    </div>

                </div>
                <div class="row mb-2">
                    <div class="col-md-6">
                        <div class="row">
                            <label class="col-md-4 col-form-label" for="basic-default-name">@Localizer.GetString("PhoneNumber") :</label>
                            <div class="col-md-8">
                                <input type="text" class="form-control" id="searchStringPhoneNumber" />
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="row">
                            <label class="col-md-4 col-form-label" for="basic-default-name">@Localizer.GetString("Name") :</label>
                            <div class="col-md-8">
                                <input type="text" class="form-control" id="searchStringName" />
                            </div>
                        </div>
                    </div>

                </div>
                <div class="row mb-2">
                    <div class="col-md-6">
                        <div class="row">
                            <label class="col-md-4 col-form-label" for="basic-default-name">@Localizer.GetString("MemberCode") :</label>
                            <div class="col-md-8">
                                <input type="text" class="form-control" id="searchStringMemberCode" />
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="row">
                            <label class="col-md-4 col-form-label" for="basic-default-name">@Localizer.GetString("Rank") :</label>
                            <div class="col-md-8">
                                <select id="ranks" class="form-select">
                                  @foreach (var rank in ViewBag.RankList)
                                  {
                                      <option value="@rank.Value" )>
                                          @rank.Text
                                      </option>
                                  }
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row float-end">
                    <small class="text-muted float-end"><button type="button" id="btnsearch" class="btn btn-info">@Localizer.GetString("Search")</button></small>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Basic Bootstrap Table -->
<div class="card">
    <div class="text-nowrap table-striped table-responsive-sm">
        <table id="MydataTableDiv" class="table">
            <thead>
                <tr>
                    <th>@Localizer.GetString("ChineseName")</th>
                    <th>@Localizer.GetString("EnglishName")</th>
                    <th>@Localizer.GetString("PhoneNumber")</th>
                    <th>@Localizer.GetString("Tier")</th>
                    <th>@Localizer.GetString("MemberCode")</th>
                    <th>@Localizer.GetString("Status")</th>
                    <th>@Localizer.GetString("Created")</th>
                    <th>@Localizer.GetString("Actions")</th>
                    <th style="display:none">@Localizer.GetString("Id")</th>
                </tr>
            </thead>
        </table>
    </div>
</div>
<!--/ Basic Bootstrap Table -->
@section modal {

}

@section PageScripts {
    <script>
          async function setCurrentDate()
          {
              var dateFrom = new Date();
              var dateTo = new Date()

              // Subtract 7 days from the current date
              dateFrom.setDate(dateTo.getDate() - 7);

              // Get the year, month, and day in local time
              var yearTo = dateTo.getFullYear();
              var monthTo = ('0' + (dateTo.getMonth() + 1)).slice(-2);  // Months are zero-based
              var dayTo = ('0' + dateTo.getDate()).slice(-2);  // Add leading zero if necessary
        
              // Construct the formatted date as YYYY-MM-DD
              var formattedDateTo = `${yearTo}-${monthTo}-${dayTo}`;

              // Get the year, month, and day in local time
              var yearFrom = dateFrom.getFullYear();
              var monthFrom = ('0' + (dateFrom.getMonth() + 1)).slice(-2);  // Months are zero-based
              var dayFrom = ('0' + dateFrom.getDate()).slice(-2);  // Add leading zero if necessary
        
              // Construct the formatted date as YYYY-MM-DD
              var formattedDateFrom = `${yearFrom}-${monthFrom}-${dayFrom}`;

              // Set the formatted date as the value of the input field
              $('#dateTo').val(formattedDateTo);
              $('#dateFrom').val(formattedDateFrom);
          }

          var globalTableData = [];
          $('#membersModal').on('hidden.bs.modal', function () {
                // Reset form fields
                $(this).find('form').trigger('reset');
          });

          function AddMember(){
            Site.AjaxGet("/Members/AddMember",
                  function (data) {
                    $('#membersModal').html(data);
                    $('#membersModal').modal('show');
                  });

          }

          function EditMember(id) {
            Site.AjaxGet("/Members/UpdateMember/" + id,
                  function (data) {
                    $('#membersModal').html(data);
                    $('#membersModal').modal('show');
                  }
            );
          }



          // function DeleteLessonSessions(id) {
          //     Site.AjaxGet("/LessonSessions/DeleteLessonSessions/" + id,
          //         function (data) {
          //             $('#lessonSessionsModal').html(data);
          //             $('#lessonSessionsModal').modal('show');
          //         });

          // }

          function initMemberTable() {
            $('#searchStringName').on('keyup', function (event) {
                if (event.key === "Enter") {
                    globalTableData.api().ajax.reload();
                }
            });
            $('#searchStringMemberCode').on('keyup', function (event) {
                if (event.key === "Enter") {
                    globalTableData.api().ajax.reload();
                }
            });
            $('#searchStringPhoneNumber').on('keyup', function (event) {
                if (event.key === "Enter") {
                    globalTableData.api().ajax.reload();
                }
            });

              var table = $("#MydataTableDiv").dataTable({
                  "lengthChange": false,
                  "pageLength": 40,
                  "searching": false,
                  "bProcessing": false,
                  "bSort": true,
                  "sPaginationType": "full_numbers",
                  "bServerSide": false,
                "sAjaxSource": "/Members/GetMemberList",
                  "fnServerData": function (sSource, aoData, fnCallback) {
                      $.ajax({
                          "dataType": 'json',
                          "type": "Get",
                          "url": sSource,
                        "data": {"name": $("#searchStringName").val(), "phoneNumber": $("#searchStringPhoneNumber").val(),"memberCode": $("#searchStringMemberCode").val(),
                                  "rank": $("#ranks").find(":selected").val(),"dateFrom": $("#dateFrom").val(),"dateTo": $("#dateTo").val()},
                          "success": function (json) {
                              fnCallback(JSON.parse(json));
                          }
                      })
                  },
                  "aoColumns": [
                    { "mData": "ChineseName" },
                    { "mData": "EnglishName" },
                    { "mData": "PhoneNumber" },
                    { "mData": "Rank" },
                    { "mData": "MemberCode" },
                    { "mData": "Status" },
                    { "mData": "CreatedStr" },
                    { "mData": "action" },
                    { "mData": "Id" }
                  ],
                  "aoColumnDefs": [
                      {
                          "aTargets": [5],
                          "mRender": function (data, type, row) {
                              if (data == true) {
                                  var actions = '<span class="badge bg-label-primary me-1">Active</span>'
                                  return actions;
                              }
                              else {
                                  var actions = '<span class="badge bg-label-warning me-1">Inactive</span>'
                                  return actions;

                              }
                          },
                      },
                      {
                          "aTargets": [-2],
                          "visible": true,
                          "searchable": false,
                          "mRender": function (data, type, row) {
                            var action = '<div class="dropdown"><button type="button" class="btn p-0 dropdown-toggle hide-arrow" data-bs-toggle="dropdown"><i class="bx bx-dots-vertical-rounded"></i></button><div class="dropdown-menu"><a class="dropdown-item" onclick="EditMember(\'' + row.Id + '\')";"><i class="bx bx-edit-alt me-1"></i> Edit</a><a class="dropdown-item" onclick="DeleteLessonSessions(\'' + row.Id + '\')"><i class="bx bx-trash me-1"></i> Delete</a></div></div>';
                              return action;
                          }
                      },
                      {
                          "aTargets": [-1],
                          "visible": false,
                          "searchable": false
                      },
                  ],
                  "order": [[6, "desc"]],
              });

              $("#MydataTableDiv_filter").css("float", "right");
              $("#MydataTableDiv_paginate").css("float", "right");
              $("#MydataTableDiv_length").find("label").css("display", "flex");
              $("#MydataTableDiv_length").find("label").css("align-items", "center");
              $("#MydataTableDiv_length").find("select").css("width", "55px");
              $("#MydataTableDiv_length").find("select").css("margin", "5px");
              $("#MydataTableDiv_filter").find("label").css("display", "flex");
              $("#MydataTableDiv_filter").find("label").css("align-items", "center");
              $("#MydataTableDiv_filter").css("float", "right");
              $("#MydataTableDiv_filter").find("input").css("margin", "5px");
              $("#MydataTableDiv_filter").find("input").css("margin-right", "0px");

              $('#btnsearch').on('click', function () {
                globalTableData.api().ajax.reload();
              });

              globalTableData = table;

              // $(function () {
              //     $('#memberGroupFilterForm').each(function () {
              //         $(this).find('input').keypress(function (e) {
              //             if (e.which == 10 || e.which == 13) {
              //                 $('#btnsearch').click();
              //             }
              //         });
              //     });
              // });
        }

          $(document).ready(async function () {
            await setCurrentDate();
            initMemberTable();
          })
    </script>
}
